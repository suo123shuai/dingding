package com.ddcar.service.impl;

import com.ddcar.entity.TbUser;
import com.ddcar.entity.UserOrderVehicleItme;
import com.ddcar.entity.UserVehicle;
import com.ddcar.entity.Vehicles;
import com.ddcar.mapper.TbBranchMapper;
import com.ddcar.mapper.TbOrderItemMapper;
import com.ddcar.mapper.TbUserMapper;
import com.ddcar.mapper.TbVehicleMapper;
import com.ddcar.service.WangMyModelService;
import com.github.pagehelper.PageHelper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

@Service
public class WangMyModelServiceImpl implements WangMyModelService {

    @Autowired
    TbUserMapper userMapper;

    @Autowired
    TbVehicleMapper vehicleMapper;

    @Autowired
    TbBranchMapper branchMapper;

    @Autowired
    TbOrderItemMapper orderItemMapper;

    @Override
    public List<Vehicles> findUserVehicle(Map map, Integer page, Integer size) {
        PageHelper.startPage(page,size);
        return vehicleMapper.findUserVehicle(map);
    }

    @Override
    public String fiindUserQrCode(long userId) {
        return branchMapper.fiindUserQrCode(userId);
    }

    @Override
    public Vehicles findUserVehicleParticular(long vehicleId) throws Exception {
        return vehicleMapper.findUserVehicleParticular(vehicleId);
    }

    @Override
    public List<TbUser> listUser(long wangUserId, Integer page, Integer size) {
        PageHelper.startPage(page,size);
        return userMapper.listUser(wangUserId);
    }

    @Override
    public int updUserState(Map map) {
        String state = (String) map.get("state");
        if("0".equals(state)){
            map.put("wangUserId", map.get("modifyBy"));
        } else {
            map.put("wangUserId", 0);
        }
        return userMapper.updUserState(map);
    }

    @Override
    public UserOrderVehicleItme findUserVehicle(long userId) throws Exception {
        return orderItemMapper.findUserVehicle(userId);
    }

    @Override
    public List<TbUser> findUserByLike(Map map, Integer page, Integer size) {
        PageHelper.startPage(page, size);
        return userMapper.findUserByLike(map);
    }

    @Override
    public UserVehicle findUser(long userId){
        return userMapper.findUser(userId);
    }

    @Override
    public int updUserEmptyState(Map map) {
        return userMapper.updUserEmptyState(map);
    }

    @Override
    public TbUser getUserByUserId(long userId) {
        return userMapper.getUserByUserId(userId);
    }

}
