package com.ddcar.controller;

import com.alibaba.fastjson.JSON;
import com.common.BaseBean;
import com.common.Commonparam;
import com.ddcar.entity.TbInout;
import com.ddcar.entity.TbManager;
import com.ddcar.entity.TbVehicle;
import com.ddcar.service.TbInoutService;
import com.ddcar.service.TbVehicleService;
import com.ddcar.util.UtilLog;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpSession;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

/**
 * Created by Administrator on 2018-09-03.
 */
@Controller
@RequestMapping("/vehicle")
public class TbVehicleController {

    @Autowired
    TbVehicleService tbVehicleService;
    @Autowired
    TbInoutService tbInoutService;

    @RequestMapping(value = "/findTbVehicleList")
    public @ResponseBody
    BaseBean findTbVehicleList(Integer page, Integer size,Long brandId,Integer modelType,Long branchId,String branchName,Long vehicleId,Integer state) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<TbVehicle> list=tbVehicleService.findTbVehicleList(page,size,brandId,modelType,branchId,branchName,vehicleId,state);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }


    @RequestMapping(value = "/noOutTbVehicleList")
    public @ResponseBody
    BaseBean noOutTbVehicleList(Integer page, Integer size, Integer brandId,Integer modelType,Integer vehicleId) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<TbVehicle> list=tbVehicleService.noOutTbVehicleList(page,size,brandId,modelType,vehicleId);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());
        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }
    //分公司退回的车电
    @RequestMapping(value = "/returnTbVehicleList")
    public @ResponseBody
    BaseBean returnTbVehicleList(Integer page, Integer size,Integer branchId,String branchName) throws Exception {
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbVehicleService.returnTbVehicleList(page,size,branchId,branchName));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }
    //网点退回的车电
    @RequestMapping(value = "/wangReturnTbVehicleList")
    public @ResponseBody
    BaseBean wangReturnTbVehicleList(HttpSession session,Integer page, Integer size) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
            Long com=companyId.getCompanyId();
            List<TbVehicle> list=tbVehicleService.wangReturnTbVehicleList(page,size,com);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }

    //根据分公司查询
    @GetMapping("/tbVehiclebranch")
    @ResponseBody
    public String update(Integer page, Integer size,Integer modelId){
        TbVehicle vehicle = (TbVehicle) tbVehicleService.findTbVehiclebranchList(page, size, modelId);
        String json = JSON.toJSONString(vehicle);
        return json;
    }

    //根据id查询
    @ResponseBody
    @RequestMapping("/searchId")
    public BaseBean searchId(@RequestParam("vehicleId")Long vehicleId){
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbVehicleService.tbVehicleSeacherId(vehicleId));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //删除
    @RequestMapping("/delTbVehicle")
    @ResponseBody
    public BaseBean delTbVehicle(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.delTbVehicle(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }


    //退回车电再入库
    @RequestMapping("/comreturnTbVehicle")
    @ResponseBody
    public BaseBean comreturnTbVehicle(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.comreturmTbVehicle(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }
    //可租
    @RequestMapping("/updatestateOk")
    @ResponseBody
    public BaseBean updatestateOk(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.updatestateOk(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }
    //维修
    @RequestMapping("/updatestateRepair")
    @ResponseBody
    public BaseBean updatestateRepair(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.updatestateRepair(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }
    //停用
    @RequestMapping("/updatestateokStop")
    @ResponseBody
    public BaseBean updatestateokStop(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.updatestateokStop(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }


    //出库到分公司
    @RequestMapping("/vehicleOutCom")
    @ResponseBody
    public BaseBean vehicleOutCom(HttpSession session,Long branchId,Long[] delArr) {
        BaseBean baseBean = new BaseBean();
        try {
            for (Long id:delArr){
            TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
            String com=companyId.getUserName();
            TbInout tbInout=new TbInout();
            tbInout.setVehicleId(id);
            tbInout.setFromId(0);//来源方
            tbInout.setState("1");//进行状态
            tbInout.setToId(branchId);
            tbInout.setType(2);
            tbInout.setInoutType(2);
            tbInout.setDeleteFlag(0);
            tbInout.setCreateBy(com);
            Date date=new Date();
            DateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String time=format.format(date);
            tbInout.setCreateTime(time);
            tbInoutService.add(tbInout);
            }
            tbVehicleService.vehicleOutCom(branchId,delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //出库到网点
    @RequestMapping("/vehicleOutPing")
    @ResponseBody
    public BaseBean vehicleOutPing(HttpSession session,Long branchId,Long[] delArr) {
        BaseBean baseBean = new BaseBean();
        try {
            for (Long id:delArr){
                TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
                String com=companyId.getUserName();
                TbInout tbInout=new TbInout();
                tbInout.setVehicleId(id);
                tbInout.setFromId(0);//来源方
                tbInout.setState("1");//进行状态
                tbInout.setToId(branchId);
                tbInout.setType(2);
                tbInout.setInoutType(2);
                tbInout.setDeleteFlag(0);
                tbInout.setCreateBy(com);
                Date date=new Date();
                DateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String time=format.format(date);
                tbInout.setCreateTime(time);
                tbInoutService.add(tbInout);
            }
            TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
            Long bid=companyId.getCompanyId();
            tbVehicleService.vehicleOutPing(bid,delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }


    //编辑型号信息
    @ResponseBody
    @RequestMapping("/updateTbVehicle")
    public BaseBean editAddress(TbVehicle tbVehicle){
        BaseBean baseBean=new BaseBean();
        try {
            tbVehicleService.updateTbVehicle(tbVehicle);
            baseBean.setStatus(200);
            baseBean.setMsg("编辑成功");
        }catch (Exception ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error("操作失败",ex);
        }
        return baseBean;
    }

    //分公司查询没有入库的车电
    @ResponseBody
    @RequestMapping("/ruTbVehicleList")
    public BaseBean ruTbVehicleList(HttpSession session,Integer page, Integer size,Integer brandId,Integer modelType,Integer wangUserId,Integer source,Integer vehicleId,Integer state){
        TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
        Long com=companyId.getCompanyId();
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbVehicleService.ruTbVehicleList(page,size,com,brandId,modelType,wangUserId,source,vehicleId,state));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }
    //查询分公司已入库的车电
    @ResponseBody
    @RequestMapping("/okTbVehicleList")
    public BaseBean okTbVehicleList(HttpSession session,Integer page, Integer size,Integer brandId,Integer modelType,Integer wangUserId,String branchName,Long vehicleId,String state,Integer tName){
        TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
        Long com=companyId.getCompanyId();
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbVehicleService.okTbVehicleList(page,size,com,brandId,modelType,wangUserId,branchName,vehicleId,state,tName));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //分公司把车电入库到公司
    @RequestMapping("/completedRk")
    @ResponseBody
    public BaseBean completedRk(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.completedRk(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //分公司把车电入库到公司
    @RequestMapping("/completedRe")
    @ResponseBody
    public BaseBean completedRe(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbVehicleService.completedRe(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //出库到网点
    @RequestMapping("/vehicleOutWang")
    @ResponseBody
    public BaseBean vehicleOutWang(HttpSession session,Long branchId,Long[] delArr) {
        BaseBean baseBean = new BaseBean();
        try {
            for (Long id:delArr){
                TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
                String com=companyId.getUserName();
                Long bid=companyId.getCompanyId();
                System.out.print(bid);
                TbInout tbInout=new TbInout();
                tbInout.setVehicleId(id);//车电id
                tbInout.setFromId(Math.toIntExact(bid));//来源方（分公司id）
                tbInout.setState("1");//进行状态
                tbInout.setToId(branchId);//接收方（网点id）
                tbInout.setType(3);//接收方类型1平台2分公司3网点4团签5骑手
                tbInout.setInoutType(2);//1：入库  2：出库
                tbInout.setDeleteFlag(0);//未删
                tbInout.setCreateBy(com);//操作人（当前用户也就是分公司管理员）
                Date date=new Date();
                DateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String time=format.format(date);
                tbInout.setCreateTime(time);//当前时间（出库的时间）
                tbInoutService.add(tbInout);
            }
            tbVehicleService.vehicleOutWang(branchId,delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //查看发票
    @ResponseBody
    @RequestMapping("/findRes")
    public BaseBean findRes(HttpSession session,Integer page, Integer size,Long vehicleId){
        TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
        Long com=companyId.getCompanyId();
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbVehicleService.findRes(page,size,com,vehicleId));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
            UtilLog.logger.error("错误信息",e);
        }
        return baseBean;
    }

    /**  获取车辆位置
     * @author ZhangXuanWei
     * @date 2018/9/20 16:00
     * @param userId
     * @return com.common.BaseBean
     */
    @ResponseBody
    @RequestMapping("/carPosition")
    public BaseBean carPosition(Long companyId){
        BaseBean baseBean=new BaseBean();
        try {
            if (companyId!=null){
                List<HashMap> list = tbVehicleService.searchCarPosition(companyId);
                baseBean.setStatus(200);
                baseBean.setRows(list);
                baseBean.setTotal(list.size());
            }else {
                baseBean.setMsg("参数错误");
            }
        }catch (Exception ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error("操作失败",ex);
        }
        return baseBean;
    }


}
