package com.ddcar.controller;

import com.alibaba.fastjson.JSON;
import com.common.BaseBean;
import com.common.Commonparam;
import com.ddcar.entity.TbBrand;
import com.ddcar.entity.TbManager;
import com.ddcar.entity.TbModelNumber;
import com.ddcar.service.TbBrandService;
import com.ddcar.service.TbModelNumberService;
import com.ddcar.util.UtilLog;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpSession;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

/**
 * Created by Administrator on 2018-09-03.
 */
@Controller
@RequestMapping("/model")
public class TbModelNumberController {

    @Autowired
    TbModelNumberService tbModelNumberService;

    TbBrandService tbBrandService;

    private String msg="TbModelNumberController";
    //查询所有型号
    @RequestMapping(value = "/findTbModelNumberList")
    public @ResponseBody
    BaseBean findTbManagerList(Integer page, Integer size,String model,Long brandId,Integer modelType) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<TbModelNumber> list=tbModelNumberService.findTbModelNumberList(page,size,model,brandId,modelType);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }
    //AllTbBrandsearchmodel
    @GetMapping("/searchmodel")
    @ResponseBody
    public BaseBean searchbylcode(String linecode){
        BaseBean bean = new BaseBean();
        try {
            List<TbBrand> list=tbBrandService.findList();
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }

    //TbModelNumberSearchbrandId
    @RequestMapping("/searchbrandId")
    @ResponseBody
    public BaseBean searchbrandId(Long brandId){
        BaseBean bean = new BaseBean();
        try {
            List<TbModelNumber> tbModelNumber = tbModelNumberService.selectbrandsearch(brandId);
            bean.setStatus(200);
            bean.setRows(tbModelNumber);
            bean.setTotal(new PageInfo<>(tbModelNumber).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }

    //查询没有设置价格的型号
    @RequestMapping(value = "/onPriceModel")
    public @ResponseBody
    BaseBean findTbManagerList(Integer page, Integer size,String brandName, String model, Integer modelType) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<HashMap> list=tbModelNumberService.onPriceModel(page,size,brandName,model,modelType);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
            UtilLog.logger.error("",e);
        }
        return bean;
    }
    //添加型号
    @ResponseBody
    @RequestMapping("/add")
    public BaseBean add(TbModelNumber tbModelNumber,HttpSession session){
        BaseBean baseBean=new BaseBean();
        TbManager loginUser= (TbManager) session.getAttribute("loginUser");
        if(loginUser!=null){
            tbModelNumber.setModifyBy(loginUser.getUserName());
        }

        try{
            TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");

            Date date=new Date();
            DateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String time=format.format(date);
            tbModelNumber.setDeleteFlag(0);
            /*tbModelNumber.getCreateBy(com);*/
            tbModelNumber.setCreateTime(time);
            tbModelNumberService.add(tbModelNumber);
            baseBean.setStatus(200);
            baseBean.setMsg("添加成功");
        }catch(RuntimeException ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error(msg,ex);
        }
        return baseBean;
    }
    //编辑型号信息
    @ResponseBody
    @RequestMapping("/updateTbModelNumber")
    public BaseBean editAddress(HttpSession session,TbModelNumber tbModelNumber){
        BaseBean baseBean=new BaseBean();
        try {
            TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
            String com=companyId.getUserName();
            Date date=new Date();
            DateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String time=format.format(date);
            tbModelNumber.setModifyBy(com);
            tbModelNumber.setModifyTime(time);
            tbModelNumberService.update(tbModelNumber);
            baseBean.setStatus(200);
            baseBean.setMsg("编辑成功");
        }catch (Exception ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error("操作失败",ex);
        }
        return baseBean;
    }

    //查出型号1条数据
    @RequestMapping("/modelId")
    @ResponseBody
    public String updateid(Long modelId){
        TbModelNumber tbModelNumber = tbModelNumberService.selectByPrimaryKey(modelId);
        String json = JSON.toJSONString(tbModelNumber);
        return json;
    }

    //逻辑删除
    @RequestMapping("/delTbModelNumber")
    @ResponseBody
    public BaseBean delTbBrand(Long[] delArr) {
        BaseBean baseBean = new BaseBean();

        try {
            tbModelNumberService.delTbModelNumber(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
            UtilLog.logger.error("===============",e);
        }
        return baseBean;
    }




}
