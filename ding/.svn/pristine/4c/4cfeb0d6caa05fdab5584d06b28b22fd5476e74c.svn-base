<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<!--自定义Overlay-->
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>骑手位置</title>
    <style type="text/css">
        * {
            margin: 0px;
            padding: 0px;
        }
        body,
        button,
        input,
        select,
        textarea {
            font: 12px/16px Verdana, Helvetica, Arial, sans-serif;
        }
        #info {
            width: 1150px;
            padding-top: 3px;
            overflow: hidden;
        }
        .btn {
            width: 190px;
        }
    </style>
    <script charset="utf-8" src="https://map.qq.com/api/js?v=2.exp"></script>

</head>

<body onload="init()">
<div style="width:1150px;height:1000px" id="container"></div>
<div id="info">按地图查看骑手位置</div>
<script>
    function init() {
        var center = new qq.maps.LatLng(32.1314520, 116.1314);
        var map = new qq.maps.Map(document.getElementById("container"), {
            center: center,
            zoom: 14
        });
        var Label = function(opts) {
            qq.maps.Overlay.call(this, opts);
        }

        //继承Overlay基类
        Label.prototype = new qq.maps.Overlay();
        //定义construct,实现这个接口来初始化自定义的Dom元素
        Label.prototype.construct = function() {
            this.dom = document.createElement('div');
            this.dom.style.cssText =
                'background:red;color:white;position:absolute;' +
                'text-align:center;width:50px;height:20px';
            this.dom.innerHTML = '张三';

            //将dom添加到覆盖物层，overlayLayer的顺序为容器 1，此容器中包含Polyline、Polygon、GroundOverlay等
            this.getPanes().overlayLayer.appendChild(this.dom);

        }
        //绘制和更新自定义的dom元素
        Label.prototype.draw = function() {
            //获取地理经纬度坐标
            var position = this.get('position');
            if (position) {
                //根据经纬度坐标计算相对于地图外部容器左上角的相对像素坐标
                //var pixel = this.getProjection().fromLatLngToContainerPixel(position);
                //根据经纬度坐标计算相对于地图内部容器原点的相对像素坐标
                var pixel = this.getProjection().fromLatLngToDivPixel(position);
                this.dom.style.left = pixel.getX() + 'px';
                this.dom.style.top = pixel.getY() + 'px';
            }
        }

        Label.prototype.destroy = function() {
            //移除dom
            this.dom.parentNode.removeChild(this.dom);
        }
        var label = new Label({
            map: map,
            position: center
        });
    }
</script>
</body>

</html>
