package com.ddcar.controller;

import com.common.BaseBean;
import com.common.Commonparam;
import com.ddcar.entity.TbBranch;
import com.ddcar.entity.TbManager;
import com.ddcar.service.TbBranchService;
import com.ddcar.util.UtilLog;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.rmi.CORBA.Util;
import javax.servlet.http.HttpSession;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 * Created by Administrator on 2018-09-03.
 */
@Controller
@RequestMapping("/branch")
public class TbBranchController {

    @Autowired
    TbBranchService tbBranchService;

    private String msg="TbBranchController";
   /* @Autowired
    TbVehicleService tbVehicleService;*/

    @RequestMapping(value = "/findTbBranchList")
    public @ResponseBody
    BaseBean findTbManagerList(Integer page, Integer size) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<TbBranch> list=tbBranchService.findTbBranchMapperList(page,size);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }
    //查询车电信息
   /* @RequestMapping(value = "/findTbVehicleList")
    public @ResponseBody
    BaseBean findTbManagerList(Integer page, Integer size) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<TbVehicle> list=tbVehicleService.findTbVehicleList(page,size);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }*/

    @RequestMapping(value = "/findTbBranchbranchList")
    public @ResponseBody
    BaseBean findTbBranchbranchList(Integer page, Integer size,Integer branchId,String branchName,Integer websiteType) throws Exception {
        BaseBean bean = new BaseBean();
        try {
            List<TbBranch> list=tbBranchService.findTbBranchbranchList(page,size,branchId,branchName,websiteType);
            bean.setStatus(200);
            bean.setRows(list);
            bean.setTotal(new PageInfo<>(list).getTotal());

        } catch (Exception e) {
            bean.setMsg(Commonparam.handle(e));
        }
        return bean;
    }
    //查询分公司的网点
    @ResponseBody
    @RequestMapping("/selectcomWang")
    public BaseBean selectcomWang(HttpSession session,Integer page, Integer size,Long branchId,String branchName,Integer websiteType){
        TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
        Long com=companyId.getCompanyId();
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbBranchService.selectcomWang(com,page,size,websiteType,branchId,branchName));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
            UtilLog.logger.error("错误信息",e);
        }
        return baseBean;
    }
    //添加分公司
    @ResponseBody
    @RequestMapping("/add")
    public BaseBean add(TbBranch tbBranch, HttpSession session){
        BaseBean baseBean=new BaseBean();
        TbManager loginUser= (TbManager) session.getAttribute("loginUser");
        if(loginUser!=null){
            tbBranch.setModifyBy(loginUser.getUserName());
        }
        tbBranch.setDeleteFlag(0);
        tbBranch.setType(1);
        try{
            tbBranchService.add(tbBranch);
            baseBean.setStatus(200);
            baseBean.setMsg("添加成功");
        }catch(RuntimeException ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error(msg,ex);
        }
        return baseBean;
    }

    //编辑分公司信息
    @ResponseBody
    @RequestMapping("/updatebrand")
    public BaseBean editAddress(TbBranch tbBranch){
        BaseBean baseBean=new BaseBean();
        try {
            tbBranchService.update(tbBranch);
            baseBean.setStatus(200);
            baseBean.setMsg("编辑成功");
        }catch (Exception ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error("操作失败",ex);
            UtilLog.logger.error("===========",ex);
        }
        return baseBean;
    }


    //编辑网点信息
    @ResponseBody
    @RequestMapping("/updateDot")
    public BaseBean updateDot(TbBranch tbBranch){
        BaseBean baseBean=new BaseBean();
        try {
            tbBranchService.updateDot(tbBranch);
            baseBean.setStatus(200);
            baseBean.setMsg("编辑成功");
        }catch (Exception ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error("操作失败",ex);
        }
        return baseBean;
    }

    //逻辑删除
    @RequestMapping("/delTbBranch")
    @ResponseBody
    public BaseBean delTbBrand(Long[] delArr) {
        BaseBean baseBean = new BaseBean();
        try {
            tbBranchService.delTbBranch(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //启用
    @RequestMapping("/enable")
    @ResponseBody
    public BaseBean enable(Long[] delArr) {
        BaseBean baseBean = new BaseBean();
        try {
            tbBranchService.enable(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //关停
    @RequestMapping("/close")
    @ResponseBody
    public BaseBean close(Long[] delArr) {
        BaseBean baseBean = new BaseBean();
        try {
            tbBranchService.close(delArr);
            baseBean.setStatus(200);
        } catch (Exception e) {
            baseBean.setStatus(400);
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //根据id查询
    @ResponseBody
    @RequestMapping("/searchId")
    public BaseBean searchId(@RequestParam("branchId")Long branchId){
        BaseBean baseBean=new BaseBean();
        try {
            baseBean.setRows(tbBranchService.branchSearchId(branchId));
            baseBean.setStatus(200);
        }catch (Exception e){
            baseBean.setMsg(Commonparam.handle(e));
        }
        return baseBean;
    }

    //新建网点
    @ResponseBody
    @RequestMapping("/insertDot")
    public BaseBean insertDot(TbBranch tbBranch, HttpSession session){
        BaseBean baseBean=new BaseBean();
        TbManager companyId =  (TbManager) session.getAttribute("dcoinManagerInfo");
        try{
            tbBranch.setDeleteFlag(0);
            tbBranch.setType(2);
            tbBranch.setParentId(companyId.getCompanyId());
            tbBranch.setCreateBy(companyId.getUserName());
            tbBranch.setBranchState(0);
            Date date=new Date();
            DateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String time=format.format(date);
            tbBranch.setCreateTime(time);
            tbBranchService.insertDot(tbBranch);
            baseBean.setStatus(200);
            baseBean.setMsg("添加成功");
        }catch(RuntimeException ex){
            baseBean.setMsg(Commonparam.handle(ex));
            Log.logger.error(msg,ex);
        }
        return baseBean;
    }

}
